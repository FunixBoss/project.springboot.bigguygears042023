package com.project.models;
// Generated Apr 22, 2023, 11:44:21 AM by Hibernate Tools 4.3.6.Final

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashSet;
import java.util.List;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Product generated by hbm2java
 */
@Entity
@Table(name = "Product", schema = "dbo")
public class Product implements java.io.Serializable {

	private Integer productId;
	private Category category;
	private String productName;
	private String description;
	private BigDecimal price;
	private ProductBrand productBrand;
	private Date createdAt;
	private Date updatedAt;
	private List<ProductVariant> productVariants = new ArrayList<ProductVariant>(0);
	private List<ProductReview> productReviews = new ArrayList<ProductReview>(0);
	private List<ProductImage> productImages = new ArrayList<ProductImage>(0);
	private List<CartDetail> cartDetails = new ArrayList<CartDetail>(0);
	private List<OrderDetail> orderDetails = new ArrayList<OrderDetail>(0);

	public Product() {
	}

	public Product(Category category, ProductBrand productBrand, String productName, BigDecimal price,
			Date createdAt, Date updatedAt) {
		this.category = category;
		this.productBrand = productBrand;
		this.productName = productName;
		this.price = price;
		this.createdAt = createdAt;
		this.updatedAt = updatedAt;
	}

	public Product(Category category, ProductBrand productBrand, String productName, String description,
			BigDecimal price, Date createdAt, Date updatedAt, List<ProductReview> productReviews,
			List<ProductImage> productImages, List<ProductVariant> productVariants, List<CartDetail> cartDetails,
			List<OrderDetail> orderDetails) {
		this.category = category;
		this.productBrand = productBrand;
		this.productName = productName;
		this.description = description;
		this.price = price;
		this.createdAt = createdAt;
		this.updatedAt = updatedAt;
		this.productReviews = productReviews;
		this.productImages = productImages;
		this.productVariants = productVariants;
		this.cartDetails = cartDetails;
		this.orderDetails = orderDetails;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "product_id", unique = true, nullable = false)
	public Integer getProductId() {
		return this.productId;
	}

	public void setProductId(Integer productId) {
		this.productId = productId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "category_id", nullable = false)
	public Category getCategory() {
		return this.category;
	}

	public void setCategory(Category category) {
		this.category = category;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "brand_id", nullable = false)
	public ProductBrand getProductBrand() {
		return this.productBrand;
	}

	public void setProductBrand(ProductBrand productBrand) {
		this.productBrand = productBrand;
	}

	@Column(name = "product_name", nullable = false)
	public String getProductName() {
		return this.productName;
	}

	public void setProductName(String productName) {
		this.productName = productName;
	}

	@Column(name = "description")
	public String getDescription() {
		return this.description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	@Column(name = "price", nullable = false, precision = 18)
	public BigDecimal getPrice() {
		return this.price;
	}

	public void setPrice(BigDecimal price) {
		this.price = price;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "created_at", nullable = false, length = 23)
	public Date getCreatedAt() {
		return this.createdAt;
	}

	public void setCreatedAt(Date createdAt) {
		this.createdAt = createdAt;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "updated_at", nullable = false, length = 23)
	public Date getUpdatedAt() {
		return this.updatedAt;
	}

	public void setUpdatedAt(Date updatedAt) {
		this.updatedAt = updatedAt;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "product")
	public List<ProductReview> getProductReviews() {
		return this.productReviews;
	}

	public void setProductReviews(List<ProductReview> productReviews) {
		this.productReviews = productReviews;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "product")
	public List<ProductImage> getProductImages() {
		return this.productImages;
	}

	public void setProductImages(List<ProductImage> productImages) {
		this.productImages = productImages;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "product")
	public List<ProductVariant> getProductVariants() {
		return this.productVariants;
	}

	public void setProductVariants(List<ProductVariant> productVariants) {
		this.productVariants = productVariants;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "product")
	public List<CartDetail> getCartDetails() {
		return this.cartDetails;
	}

	public void setCartDetails(List<CartDetail> cartDetails) {
		this.cartDetails = cartDetails;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "product")
	public List<OrderDetail> getOrderDetails() {
		return this.orderDetails;
	}

	public void setOrderDetails(List<OrderDetail> orderDetails) {
		this.orderDetails = orderDetails;
	}

	@Override
	public String toString() {
		return "Product [productId=" + productId + ", categoryId=" + category.getCategoryId() + ", productName=" + productName
				+ ", description=" + description + ", price=" + price + ", productBrandId=" + productBrand.getBrandId()
				+ ", createdAt=" + createdAt + ", updatedAt=" + updatedAt + "]";
	}

	
}
