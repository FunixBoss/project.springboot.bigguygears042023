package com.project.entities;
// Generated Apr 21, 2023, 8:44:48 PM by Hibernate Tools 4.3.6.Final

import java.io.Serializable;
import java.math.BigDecimal;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Product generated by hbm2java
 */
@Entity
@Table(name = "Product")
public class Product implements java.io.Serializable {

	private Integer productId;
	private Brand brand;
	private Category category;
	private Serializable productName;
	private String description;
	private BigDecimal price;
	private int vendorId;
	private Date createdAt;
	private Date updatedAt;
	private Set<ProductSize> productSizes = new HashSet<ProductSize>(0);
	private Set<CartDetail> cartDetails = new HashSet<CartDetail>(0);
	private Set<OrderDetail> orderDetails = new HashSet<OrderDetail>(0);
	private Set<Review> reviews = new HashSet<Review>(0);
	private Set<ProductImage> productImages = new HashSet<ProductImage>(0);

	public Product() {
	}

	public Product(Brand brand, Category category, Serializable productName, BigDecimal price, int vendorId,
			Date createdAt, Date updatedAt) {
		this.brand = brand;
		this.category = category;
		this.productName = productName;
		this.price = price;
		this.vendorId = vendorId;
		this.createdAt = createdAt;
		this.updatedAt = updatedAt;
	}

	public Product(Brand brand, Category category, Serializable productName, String description, BigDecimal price,
			int vendorId, Date createdAt, Date updatedAt, Set<ProductSize> productSizes, Set<CartDetail> cartDetails,
			Set<OrderDetail> orderDetails, Set<Review> reviews, Set<ProductImage> productImages) {
		this.brand = brand;
		this.category = category;
		this.productName = productName;
		this.description = description;
		this.price = price;
		this.vendorId = vendorId;
		this.createdAt = createdAt;
		this.updatedAt = updatedAt;
		this.productSizes = productSizes;
		this.cartDetails = cartDetails;
		this.orderDetails = orderDetails;
		this.reviews = reviews;
		this.productImages = productImages;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "product_id", unique = true, nullable = false)
	public Integer getProductId() {
		return this.productId;
	}

	public void setProductId(Integer productId) {
		this.productId = productId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "brand_id", nullable = false)
	public Brand getBrand() {
		return this.brand;
	}

	public void setBrand(Brand brand) {
		this.brand = brand;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "category_id", nullable = false)
	public Category getCategory() {
		return this.category;
	}

	public void setCategory(Category category) {
		this.category = category;
	}

	@Column(name = "product_name", nullable = false)
	public Serializable getProductName() {
		return this.productName;
	}

	public void setProductName(Serializable productName) {
		this.productName = productName;
	}

	@Column(name = "description")
	public String getDescription() {
		return this.description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	@Column(name = "price", nullable = false, precision = 18)
	public BigDecimal getPrice() {
		return this.price;
	}

	public void setPrice(BigDecimal price) {
		this.price = price;
	}

	@Column(name = "vendor_id", nullable = false)
	public int getVendorId() {
		return this.vendorId;
	}

	public void setVendorId(int vendorId) {
		this.vendorId = vendorId;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "created_at", nullable = false, length = 23)
	public Date getCreatedAt() {
		return this.createdAt;
	}

	public void setCreatedAt(Date createdAt) {
		this.createdAt = createdAt;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "updated_at", nullable = false, length = 23)
	public Date getUpdatedAt() {
		return this.updatedAt;
	}

	public void setUpdatedAt(Date updatedAt) {
		this.updatedAt = updatedAt;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "product")
	public Set<ProductSize> getProductSizes() {
		return this.productSizes;
	}

	public void setProductSizes(Set<ProductSize> productSizes) {
		this.productSizes = productSizes;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "product")
	public Set<CartDetail> getCartDetails() {
		return this.cartDetails;
	}

	public void setCartDetails(Set<CartDetail> cartDetails) {
		this.cartDetails = cartDetails;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "product")
	public Set<OrderDetail> getOrderDetails() {
		return this.orderDetails;
	}

	public void setOrderDetails(Set<OrderDetail> orderDetails) {
		this.orderDetails = orderDetails;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "product")
	public Set<Review> getReviews() {
		return this.reviews;
	}

	public void setReviews(Set<Review> reviews) {
		this.reviews = reviews;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "product")
	public Set<ProductImage> getProductImages() {
		return this.productImages;
	}

	public void setProductImages(Set<ProductImage> productImages) {
		this.productImages = productImages;
	}

}
