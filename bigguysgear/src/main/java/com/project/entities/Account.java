package com.project.entities;
// Generated Apr 22, 2023, 11:44:21 AM by Hibernate Tools 4.3.6.Final

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.UniqueConstraint;

/**
 * Account generated by hbm2java
 */
@Entity
@Table(name = "Account", uniqueConstraints = { @UniqueConstraint(columnNames = "email"),
		@UniqueConstraint(columnNames = "username") })
public class Account implements java.io.Serializable {

	private Integer accountId;
	private Role role;
	private String username;
	private String password;
	private String fullName;
	private String email;
	private String phoneNumber;
	private String imageName;
	private String address;
	private Date createdAt;
	private Date updatedAt;
	private Set<Order> orders = new HashSet<Order>(0);
	private Set<Cart> carts = new HashSet<Cart>(0);
	private Set<ProductReview> productReviews = new HashSet<ProductReview>(0);
	private Set<AccountCoupon> accountCoupons = new HashSet<AccountCoupon>(0);
	private Set<Invoice> invoices = new HashSet<Invoice>(0);

	public Account() {
	}

	public Account(Role role, String username, String password, String fullName, String email, String phoneNumber,
			String address, Date createdAt, Date updatedAt) {
		this.role = role;
		this.username = username;
		this.password = password;
		this.fullName = fullName;
		this.email = email;
		this.phoneNumber = phoneNumber;
		this.address = address;
		this.createdAt = createdAt;
		this.updatedAt = updatedAt;
	}

	public Account(Role role, String username, String password, String fullName, String email, String phoneNumber,
			String imageName, String address, Date createdAt, Date updatedAt, Set<Order> orders, Set<Cart> carts,
			Set<ProductReview> productReviews, Set<AccountCoupon> accountCoupons, Set<Invoice> invoices) {
		this.role = role;
		this.username = username;
		this.password = password;
		this.fullName = fullName;
		this.email = email;
		this.phoneNumber = phoneNumber;
		this.imageName = imageName;
		this.address = address;
		this.createdAt = createdAt;
		this.updatedAt = updatedAt;
		this.orders = orders;
		this.carts = carts;
		this.productReviews = productReviews;
		this.accountCoupons = accountCoupons;
		this.invoices = invoices;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "account_id", unique = true, nullable = false)
	public Integer getAccountId() {
		return this.accountId;
	}

	public void setAccountId(Integer accountId) {
		this.accountId = accountId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "role_id", nullable = false)
	public Role getRole() {
		return this.role;
	}

	public void setRole(Role role) {
		this.role = role;
	}

	@Column(name = "username", unique = true, nullable = false)
	public String getUsername() {
		return this.username;
	}

	public void setUsername(String username) {
		this.username = username;
	}

	@Column(name = "password", nullable = false)
	public String getPassword() {
		return this.password;
	}

	public void setPassword(String password) {
		this.password = password;
	}

	@Column(name = "full_name", nullable = false)
	public String getFullName() {
		return this.fullName;
	}

	public void setFullName(String fullName) {
		this.fullName = fullName;
	}

	@Column(name = "email", unique = true, nullable = false)
	public String getEmail() {
		return this.email;
	}

	public void setEmail(String email) {
		this.email = email;
	}

	@Column(name = "phone_number", nullable = false, length = 20)
	public String getPhoneNumber() {
		return this.phoneNumber;
	}

	public void setPhoneNumber(String phoneNumber) {
		this.phoneNumber = phoneNumber;
	}

	@Column(name = "image_name")
	public String getimageName() {
		return this.imageName;
	}

	public void setimageName(String imageName) {
		this.imageName = imageName;
	}

	@Column(name = "address", nullable = false)
	public String getAddress() {
		return this.address;
	}

	public void setAddress(String address) {
		this.address = address;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "created_at", nullable = false, length = 23)
	public Date getCreatedAt() {
		return this.createdAt;
	}

	public void setCreatedAt(Date createdAt) {
		this.createdAt = createdAt;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "updated_at", nullable = false, length = 23)
	public Date getUpdatedAt() {
		return this.updatedAt;
	}

	public void setUpdatedAt(Date updatedAt) {
		this.updatedAt = updatedAt;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "account")
	public Set<Order> getOrders() {
		return this.orders;
	}

	public void setOrders(Set<Order> orders) {
		this.orders = orders;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "account")
	public Set<Cart> getCarts() {
		return this.carts;
	}

	public void setCarts(Set<Cart> carts) {
		this.carts = carts;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "account")
	public Set<ProductReview> getProductReviews() {
		return this.productReviews;
	}

	public void setProductReviews(Set<ProductReview> productReviews) {
		this.productReviews = productReviews;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "account")
	public Set<AccountCoupon> getAccountCoupons() {
		return this.accountCoupons;
	}

	public void setAccountCoupons(Set<AccountCoupon> accountCoupons) {
		this.accountCoupons = accountCoupons;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "account")
	public Set<Invoice> getInvoices() {
		return this.invoices;
	}

	public void setInvoices(Set<Invoice> invoices) {
		this.invoices = invoices;
	}

}
