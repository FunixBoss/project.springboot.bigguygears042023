use master
GO

DROP DATABASE IF EXISTS BigGuyGear
CREATE DATABASE BigGuyGear
GO

use BigGuyGear
GO

DROP TABLE IF EXISTS Roles
CREATE TABLE Roles (
  id INT PRIMARY KEY IDENTITY,
  name VARCHAR(50) NOT NULL UNIQUE,
);

DROP TABLE IF EXISTS Accounts
CREATE TABLE Accounts (
  id INT PRIMARY KEY IDENTITY,
  username VARCHAR(255) NOT NULL UNIQUE,
  [password] VARCHAR(255) NOT NULL,
  full_name VARCHAR(255) NOT NULL,
  email VARCHAR(255) NOT NULL UNIQUE,
  phone_number VARCHAR(20) NOT NULL,
  [address] VARCHAR(255) NOT NULL,
  role_id INT NOT NULL,
  created_at DATETIME NOT NULL DEFAULT GETDATE(),
  updated_at DATETIME NOT NULL DEFAULT GETDATE(),
  FOREIGN KEY (role_id) REFERENCES Roles(id)
);

DROP TABLE IF EXISTS Categories
CREATE TABLE Categories (
  id INT PRIMARY KEY IDENTITY,
  cate_name VARCHAR(255) NOT NULL UNIQUE,
  [description] TEXT,
  image_url VARCHAR(255) NOT NULL,
  created_at DATETIME NOT NULL DEFAULT GETDATE(),
  updated_at DATETIME NOT NULL DEFAULT GETDATE()
);

DROP TABLE IF EXISTS Products
CREATE TABLE Products (
  id INT PRIMARY KEY IDENTITY,
  [name] VARCHAR(255) NOT NULL,
  category_id INT NOT NULL,
  [description] TEXT NOT NULL,
  price DECIMAL(18,2) NOT NULL,
  created_at DATETIME NOT NULL DEFAULT GETDATE(),
  updated_at DATETIME NOT NULL DEFAULT GETDATE(),
  FOREIGN KEY (category_id) REFERENCES Categories(id)
);

DROP TABLE IF EXISTS ProductImages
CREATE TABLE ProductImages (
  id INT PRIMARY KEY IDENTITY,
  product_id INT NOT NULL,
  image_url VARCHAR(255) NOT NULL,
  created_at DATETIME NOT NULL DEFAULT GETDATE(),
  updated_at DATETIME NOT NULL DEFAULT GETDATE(),
  FOREIGN KEY (product_id) REFERENCES Products(id)
);

DROP TABLE IF EXISTS Orders
CREATE TABLE Orders (
  id INT PRIMARY KEY IDENTITY,
  accounts_id INT NOT NULL,
  total_price DECIMAL(18,2) NOT NULL,
  [status] VARCHAR(255) NOT NULL,
  created_at DATETIME NOT NULL DEFAULT GETDATE(),
  updated_at DATETIME NOT NULL DEFAULT GETDATE(),
  FOREIGN KEY (accounts_id) REFERENCES Accounts(id)
);

DROP TABLE IF EXISTS OrderDetails
CREATE TABLE OrderDetails (
  id INT PRIMARY KEY IDENTITY,
  order_id INT NOT NULL,
  product_id INT NOT NULL,
  quantity INT NOT NULL,
  price DECIMAL(18,2) NOT NULL,
  created_at DATETIME NOT NULL DEFAULT GETDATE(),
  updated_at DATETIME NOT NULL DEFAULT GETDATE(),
  FOREIGN KEY (order_id) REFERENCES Orders(id),
  FOREIGN KEY (product_id) REFERENCES Products(id)
);

DROP TABLE IF EXISTS Cart
CREATE TABLE Cart (
  id INT PRIMARY KEY IDENTITY,
  accounts_id INT NOT NULL,
  product_id INT NOT NULL,
  quantity INT NOT NULL,
  created_at DATETIME NOT NULL DEFAULT GETDATE(),
  updated_at DATETIME NOT NULL DEFAULT GETDATE(),
  FOREIGN KEY (Accounts_id) REFERENCES Accounts(id),
  FOREIGN KEY (product_id) REFERENCES Products(id)
);

DROP TABLE IF EXISTS Product_Size
CREATE TABLE Product_Size (
  id INT PRIMARY KEY IDENTITY,
  size_name VARCHAR(255) NOT NULL,
  product_id INT NOT NULL,
  quantity INT NOT NULL,
  created_at DATETIME NOT NULL DEFAULT GETDATE(),
  updated_at DATETIME NOT NULL DEFAULT GETDATE(),
  FOREIGN KEY (product_id) REFERENCES Products(id)
);

DROP TABLE IF EXISTS Payment
CREATE TABLE Payment (
  id INT PRIMARY KEY IDENTITY,
  order_id INT NOT NULL,
  payment_method VARCHAR(255) NOT NULL,
  created_at DATETIME NOT NULL DEFAULT GETDATE(),
  updated_at DATETIME NOT NULL DEFAULT GETDATE(),
  FOREIGN KEY (order_id) REFERENCES OrderDetails(id)
);

DROP TABLE IF EXISTS OrderStatus
CREATE TABLE OrderStatus (
  order_status_id INT PRIMARY KEY IDENTITY,
  order_id INT NOT NULL,
  order_status TINYINT NOT NULL,
  created_at DATETIME NOT NULL DEFAULT GETDATE(),
  updated_at DATETIME NOT NULL DEFAULT GETDATE(),
  FOREIGN KEY (order_id) REFERENCES OrderDetails(id)
);
